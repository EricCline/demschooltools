# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET /login	controllers.Public.index()

GET     /                         controllers.Application.index()

GET     /editToday                controllers.ApplicationEditing.editTodaysMinutes


GET  /viewMeeting/:id	controllers.Application.viewMeeting(id: Integer)
GET  /printMeeting/:id	controllers.Application.printMeeting(id: Integer)
GET  /printWeeklyMinutes/:start_date	controllers.Application.printWeeklyMinutes(start_date : String)
GET  /editMeeting/:id	controllers.ApplicationEditing.editMeeting(id: Integer)

GET /downloadCharges    controllers.Application.downloadCharges()

GET  /viewMeetingResolutionPlans/:id	controllers.Application.viewMeetingResolutionPlans(id: Integer)
GET  /downloadMeetingResolutionPlans/:id	controllers.Application.downloadMeetingResolutionPlans(id: Integer)
GET  /editResolutionPlanList	controllers.Application.editResolutionPlanList()

POST	/setResolutionPlanComplete	controllers.ApplicationEditing.setResolutionPlanComplete(id : Integer, complete : Boolean)

GET   /personHistory/:id    controllers.Application.getPersonHistory(id: Integer)
GET   /ruleHistory/:id    controllers.Application.getRuleHistory(id: Integer)

GET   /viewPersonsWriteups/:id    controllers.Application.viewPersonsWriteups(id: Integer)
GET   /viewPersonHistory/:id    controllers.Application.viewPersonHistory(id: Integer, redact_names: Boolean ?= false)
GET   /viewRuleHistory/:id    controllers.Application.viewRuleHistory(id: Integer)


GET   /enterSchoolMeeting  controllers.ApplicationEditing.enterSchoolMeetingDecisions()
GET   /editSchoolMeeting/:charge_id  controllers.ApplicationEditing.editSchoolMeetingDecision(charge_id: Integer)
POST  /enterSchoolMeeting  controllers.ApplicationEditing.saveSchoolMeetingDecisions()

GET /viewSchoolMeeting controllers.Application.viewSchoolMeetingDecisions()

POST /newCase	controllers.ApplicationEditing.createCase(meeting_id : Integer)
POST /saveCase   controllers.ApplicationEditing.saveCase(id : Integer)
POST /continueCase	controllers.ApplicationEditing.continueCase(meeting_id : Integer, case_id : Integer)

POST /addPersonAtMeeting    controllers.ApplicationEditing.addPersonAtMeeting(meeting_id : Integer, person_id : Integer, role : Integer)
POST /removePersonAtMeeting    controllers.ApplicationEditing.removePersonAtMeeting(meeting_id : Integer, person_id : Integer, role : Integer)


POST /addPersonAtCase controllers.ApplicationEditing.addPersonAtCase(case_id : Integer, person_id : Integer, role : Integer)
POST /removePersonAtCase controllers.ApplicationEditing.removePersonAtCase(case_id : Integer, person_id : Integer, role : Integer)

POST /addCharge   controllers.ApplicationEditing.addCharge(case_id : Integer)
POST /saveCharge controllers.ApplicationEditing.saveCharge(id : Integer)
POST /removeCharge   controllers.ApplicationEditing.removeCharge(id : Integer)

GET /getLastRp/:personId/:ruleId	controllers.Application.getLastRp(personId : Integer, ruleId : Integer)


GET /viewManual       controllers.Application.viewManual()
GET /viewManualChanges       controllers.Application.viewManualChanges(begin_date : String ?= "")
GET /viewChapter/:id       controllers.Application.viewChapter(id : Integer)

GET /printManual	controllers.Application.printManual()
GET /printManualChapter/:id	controllers.Application.printManualChapter(id : Integer)


GET /thisWeekReport	controllers.Application.thisWeekReport()
GET /viewWeeklyReport/:date	controllers.Application.viewWeeklyReport(date : String)


GET /addChapter			controllers.ApplicationEditing.addChapter()
GET /editChapter/:id		controllers.ApplicationEditing.editChapter(id : Integer)
POST /saveChapter	controllers.ApplicationEditing.saveChapter()
GET /addSection/:chapterId		controllers.ApplicationEditing.addSection(chapterId : Integer)
GET /editSection/:id		controllers.ApplicationEditing.editSection(id : Integer)
POST /saveSection	controllers.ApplicationEditing.saveSection()
GET /addEntry/:sectionId		controllers.ApplicationEditing.addEntry(sectionId : Integer)
GET /editEntry/:id		controllers.ApplicationEditing.editEntry(id : Integer)
POST /saveEntry		controllers.ApplicationEditing.saveEntry()
POST /renderMarkdown	controllers.Application.renderMarkdown()


GET     /jsonPeople               controllers.CRM.jsonPeople(term ?= "")
GET     /people                   controllers.CRM.recentComments()
GET     /allPeople                controllers.CRM.allPeople()
GET     /people/new               controllers.CRM.newPerson()
GET     /people/:id               controllers.CRM.person(id: Integer)
POST    /people                   controllers.CRM.makeNewPerson()
POST    /people/:id/delete        controllers.CRM.deletePerson(id: Integer)

GET     /attendance		  controllers.Attendance.index()
GET     /attendance/viewWeek	  controllers.Attendance.viewWeek(date : String ?= "")
GET     /attendance/editWeek      controllers.Attendance.editWeek(date : String ?= "")
POST	/attendance/newCode        controllers.Attendance.newCode()
GET	/attendance/editCode/:id   controllers.Attendance.editCode(id : Integer)
POST	/attendance/saveCode      controllers.Attendance.saveCode()
GET     /attendance/codes         controllers.Attendance.viewCodes()
GET     /attendance/download      controllers.Attendance.download()

POST    /attendance/createPersonWeek  controllers.Attendance.createPersonWeek(person_id : Integer, monday : String)
POST    /attendance/deletePersonWeek  controllers.Attendance.deletePersonWeek(person_id : Integer, monday : String)
POST    /attendance/saveWeek          controllers.Attendance.saveWeek(week_id : Integer, extra_hours : Double)
POST    /attendance/saveDay           controllers.Attendance.saveDay(day_id : Integer, code ?= "", start_time ?= "", end_time ?= "")

GET     /people/edit/:id          controllers.CRM.editPerson(id: Integer)
POST    /people/edit              controllers.CRM.savePersonEdits()

GET     /jsonTags/:personId       controllers.CRM.jsonTags(term ?= "", personId: Integer)
POST    /addTag/:personId         controllers.CRM.addTag(tagId : Integer ?= null, title ?= "", personId : Integer)
POST    /removeTag/:personId/:tagId controllers.CRM.removeTag(personId: Integer, tagId: Integer)
GET     /getTagMembers			  controllers.CRM.renderTagMembers(tagId : Integer, familyMode : String)

POST    /addComment               controllers.CRM.addComment()

POST    /addDonation              controllers.CRM.addDonation()
POST    /thankDonation/:id        controllers.CRM.donationThankYou(id: Integer)
POST    /indiegogoDonation/:id        controllers.CRM.donationIndiegogoReward(id: Integer)
GET     /donations/thankyou       controllers.CRM.donationsNeedingThankYou()
GET     /donations/indiegogo      controllers.CRM.donationsNeedingIndiegogo()
GET     /donations                controllers.CRM.donations()

GET     /viewTag/:id              controllers.CRM.viewTag(id: Integer)
GET     /downloadTag/:id	  controllers.CRM.downloadTag(id: Integer)

GET     /viewTaskList/:id         controllers.CRM.viewTaskList(id: Integer)

POST	/postEmail				  controllers.Public.postEmail()
GET 	/viewPendingEmail		  controllers.CRM.viewPendingEmail()
POST	/sendTestEmail				  controllers.CRM.sendTestEmail()
POST	/deleteEmail				  controllers.CRM.deleteEmail()
POST	/sendEmail				  controllers.CRM.sendEmail()

GET     /mailchimpSettings	controllers.CRM.viewMailchimpSettings()
POST	/mailchimpSettings	controllers.CRM.saveMailchimpSettings()
GET	/syncMailchimp		controllers.Public.syncMailchimp()


GET     /settings/notifications controllers.Settings.viewNotifications()
POST    /settings/notifications controllers.Settings.editNotifications()

GET     /settings/checklists    controllers.Settings.viewTaskLists()
POST    /settings/newChecklist  controllers.Settings.newTaskList()
GET     /settings/checklist/:id controllers.Settings.viewTaskList(id : Integer)
POST    /settings/saveList      controllers.Settings.saveTaskList()
GET     /settings/task/:id      controllers.Settings.editTask(id : Integer)
POST    /settings/task          controllers.Settings.saveTask()
POST    /settings/task/new      controllers.Settings.newTask()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)



GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     controllers.Public.authenticate(provider: String)
GET     /authenticate/:provider/denied     controllers.Public.oAuthDenied(provider: String)
