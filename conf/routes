# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET /login	controllers.Public.index()

GET     /                         controllers.Application.index()

GET     /editToday                controllers.ApplicationEditing.editTodaysMinutes


GET  /viewMeeting/:id	controllers.Application.viewMeeting(id: Integer)
GET  /editMeeting/:id	controllers.ApplicationEditing.editMeeting(id: Integer)

GET   /personHistory/:id    controllers.Application.getPersonHistory(id: Integer)
GET   /ruleHistory/:id    controllers.Application.getRuleHistory(id: Integer)


GET   /enterSchoolMeeting  controllers.ApplicationEditing.enterSchoolMeetingDecisions()
POST  /enterSchoolMeeting  controllers.ApplicationEditing.saveSchoolMeetingDecisions()

POST /newCase	controllers.ApplicationEditing.createCase(meeting_id : Integer)
POST /saveCase   controllers.ApplicationEditing.saveCase(id)

POST /addPersonAtMeeting    controllers.ApplicationEditing.addPersonAtMeeting(meeting_id : Integer, person_id : Integer, role : Integer)
POST /removePersonAtMeeting    controllers.ApplicationEditing.removePersonAtMeeting(meeting_id : Integer, person_id : Integer, role : Integer)


POST /addTestifier   controllers.ApplicationEditing.addTestifier(case_number, person_id : Integer)
POST /removeTestifier controllers.ApplicationEditing.removeTestifier(case_number, person_id : Integer)

POST /addCharge   controllers.ApplicationEditing.addCharge(case_number)
POST /saveCharge controllers.ApplicationEditing.saveCharge(id : Integer)
POST /removeCharge   controllers.ApplicationEditing.removeCharge(id : Integer)




# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)




GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /authenticate/:provider/denied     controllers.Public.oAuthDenied(provider: String)
